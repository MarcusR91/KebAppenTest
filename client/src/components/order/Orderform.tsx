import { Form, Formik, FormikHelpers } from "formik";
import { OrderCreationDto } from "./Models/order.model";
import * as Yup from 'yup';
import { Button } from "../utils/Button";
import { Link } from "react-router-dom";
import { TextField } from "../Forms/TextField";
import { SelectField } from "../Forms/SelectField";


export const OrderForm = (props: OrderFormProps) => {

    const kebabs  = [{typeOfKebab:"kebabrulle"}, {typeOfKebab: "Kebabtallrik"}];
    const drinks  = [{typeOfDrink:"coca-cola"}, {typeOfDrink: "Fanta"}];

    return(
        <Formik
            initialValues = {props.model}
            onSubmit = {props.onSubmit}
            validationSchema = {Yup.object({
                firstName: Yup.string().required('This field is required').firstLetterUppercase()
            })}
        >
            {(formikProps) =>(
                <Form>
                    
                <TextField displayName="Firstname" field="firstName" type="text"/>
                <TextField displayName="Lastname" field="lastName" type="text" />
                <TextField displayName="Organisation number" field="orgNr" type="number" />
                
                <SelectField displayName="Kebab" field="typeOfKebab" optionValue="Kebabs" optionLabel="Välj kebab">
                        <>
                            {kebabs.map(kebabs => 
                                <option key={kebabs.typeOfKebab} value={kebabs.typeOfKebab}>{kebabs.typeOfKebab}</option>)}
                        </>  
                </SelectField>
                <SelectField displayName="drink" field="typeOfDrink" optionValue="Kebabs" optionLabel="Välj Dricka">
                        <>
                            {drinks.map(drinks => 
                                <option key={drinks.typeOfDrink} value={drinks.typeOfDrink}>{drinks.typeOfDrink}</option>)}
                        </>  
                </SelectField>

                <Button disabled={formikProps.isSubmitting} type="submit">Save Changes</Button>
                <Link className="btn btn-secondary mt-2" to="/drinks">Cancel</Link>
                </Form>
            )}
        </Formik>
    )
}

interface OrderFormProps{
    model: OrderCreationDto;
    onSubmit(values: OrderCreationDto, actions: FormikHelpers<OrderCreationDto>) : void;
}