import { Form, Formik, FormikHelpers } from "formik";
import {  OrderDto } from "./Models/order.model";
import * as Yup from 'yup';
import { Button } from "../utils/Button";
import { Link } from "react-router-dom";
import { TextField } from "../Forms/TextField";
import { SelectField } from "../Forms/SelectField";
import { useEffect, useState } from "react";
import axios, { AxiosResponse } from "axios";
import { KebabDto } from "../kebab/Models/Kebab.model";
import { DrinkDto } from "../Drink/Models/Drinks.model";


export const OrderForm = (props: OrderFormProps) => {

    const [kebabChoice, setKebabChoice] = useState<KebabDto[]>();
    const [drinkChoice, setDrinkChoice] = useState<DrinkDto[]>();
    
    useEffect(()=>{
        axios.get(`https://localhost:7117/api/Kebab`)
        .then((response: AxiosResponse<KebabDto[]>) =>{
            setKebabChoice(response.data);

        })
    },[])
    useEffect(()=>{
        axios.get(`https://localhost:7117/api/Drink`)
        .then((response: AxiosResponse<DrinkDto[]>) =>{
            setDrinkChoice(response.data);

        })
    },[])

    return(
        <Formik
            initialValues = {props.model}
            onSubmit = {props.onSubmit}
            validationSchema = {Yup.object({
                firstName: Yup.string().required('This field is required').firstLetterUppercase()
            })}
        >
            {(formikProps) =>(
                <Form>
                    
                <TextField displayName="Firstname" field="firstName" type="text"/>
                <TextField displayName="Lastname" field="lastName" type="text" />
                <TextField displayName="Organisation number" field="orgNr" type="number" />
                
                <SelectField displayName="Kebab" field="typeOfKebab" optionValue="Kebabs" optionLabel="Välj kebab">
                        <>
                            {kebabChoice?.map(kebabs => 
                                <option key={kebabs.id} value={kebabs.name}>{kebabs.name}</option>)}
                        </>  
                </SelectField>
                <SelectField displayName="drink" field="typeOfDrink" optionValue="Kebabs" optionLabel="Välj Dricka">
                        <>
                            {drinkChoice?.map(drinks => 
                                <option key={drinks.id} value={drinks.typeOfDrink}>{drinks.typeOfDrink}</option>)}
                        </>  
                </SelectField>

                <Button className="btn btn-primary" disabled={formikProps.isSubmitting} type="submit">Save Changes</Button>
                <Link className="btn btn-secondary mt-2" to="/drinks">Cancel</Link>
                </Form>
            )}
        </Formik>
    )
}

interface OrderFormProps{
    model: OrderDto;
    onSubmit(values: OrderDto, actions: FormikHelpers<OrderDto>) : void;
}