using KebAppen.DataAccess.Data;
using KebAppen.Models.Kebabs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;

namespace KebAppen.DataAccess.Repositories.Kebabs
{
    public class KebabRepository : IKebabRepository
    {
        private readonly AppDbContext context;
        public KebabRepository(AppDbContext context)
        {
            this.context = context;
        }




        public void CreateKebab(Kebab kebab)
        {
            context.Kebabs.Add(kebab);
            context.SaveChanges();
        }

        public async Task<List<Kebab>> GetAllKebabs()
        {
            return await context.Kebabs.ToListAsync();
        }

        public async Task<Kebab> GetById(int id)
        {
            return await context.Kebabs.FirstOrDefaultAsync(x => x.Id == id);
        }

        public void DeleteKebab(Kebab kebab)
        {
            context.Remove(kebab);
        }

        public async Task SaveKebabAsync()
        {
            await context.SaveChangesAsync();
        }
    }
}
