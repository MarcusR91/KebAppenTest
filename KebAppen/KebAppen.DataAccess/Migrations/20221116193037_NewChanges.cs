using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace KebAppen.DataAccess.Migrations
{
    public partial class NewChanges : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Orders_OrdersAdd_OrdersAddKebabId_OrdersAddDrinkingId",
                table: "Orders");

            migrationBuilder.DropForeignKey(
                name: "FK_OrdersAdd_Drinks_DrinkingId",
                table: "OrdersAdd");

            migrationBuilder.DropForeignKey(
                name: "FK_OrdersAdd_Kebabs_KebabId",
                table: "OrdersAdd");

            migrationBuilder.DropPrimaryKey(
                name: "PK_OrdersAdd",
                table: "OrdersAdd");

            migrationBuilder.RenameTable(
                name: "OrdersAdd",
                newName: "AddedOrder");

            migrationBuilder.RenameIndex(
                name: "IX_OrdersAdd_DrinkingId",
                table: "AddedOrder",
                newName: "IX_AddedOrder_DrinkingId");

            migrationBuilder.AddPrimaryKey(
                name: "PK_AddedOrder",
                table: "AddedOrder",
                columns: new[] { "KebabId", "DrinkingId" });

            migrationBuilder.AddForeignKey(
                name: "FK_AddedOrder_Drinks_DrinkingId",
                table: "AddedOrder",
                column: "DrinkingId",
                principalTable: "Drinks",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_AddedOrder_Kebabs_KebabId",
                table: "AddedOrder",
                column: "KebabId",
                principalTable: "Kebabs",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Orders_AddedOrder_OrdersAddKebabId_OrdersAddDrinkingId",
                table: "Orders",
                columns: new[] { "OrdersAddKebabId", "OrdersAddDrinkingId" },
                principalTable: "AddedOrder",
                principalColumns: new[] { "KebabId", "DrinkingId" });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_AddedOrder_Drinks_DrinkingId",
                table: "AddedOrder");

            migrationBuilder.DropForeignKey(
                name: "FK_AddedOrder_Kebabs_KebabId",
                table: "AddedOrder");

            migrationBuilder.DropForeignKey(
                name: "FK_Orders_AddedOrder_OrdersAddKebabId_OrdersAddDrinkingId",
                table: "Orders");

            migrationBuilder.DropPrimaryKey(
                name: "PK_AddedOrder",
                table: "AddedOrder");

            migrationBuilder.RenameTable(
                name: "AddedOrder",
                newName: "OrdersAdd");

            migrationBuilder.RenameIndex(
                name: "IX_AddedOrder_DrinkingId",
                table: "OrdersAdd",
                newName: "IX_OrdersAdd_DrinkingId");

            migrationBuilder.AddPrimaryKey(
                name: "PK_OrdersAdd",
                table: "OrdersAdd",
                columns: new[] { "KebabId", "DrinkingId" });

            migrationBuilder.AddForeignKey(
                name: "FK_Orders_OrdersAdd_OrdersAddKebabId_OrdersAddDrinkingId",
                table: "Orders",
                columns: new[] { "OrdersAddKebabId", "OrdersAddDrinkingId" },
                principalTable: "OrdersAdd",
                principalColumns: new[] { "KebabId", "DrinkingId" });

            migrationBuilder.AddForeignKey(
                name: "FK_OrdersAdd_Drinks_DrinkingId",
                table: "OrdersAdd",
                column: "DrinkingId",
                principalTable: "Drinks",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_OrdersAdd_Kebabs_KebabId",
                table: "OrdersAdd",
                column: "KebabId",
                principalTable: "Kebabs",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
