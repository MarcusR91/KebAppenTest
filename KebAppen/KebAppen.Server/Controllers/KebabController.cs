using AutoMapper;
using KebAppen.Business.DTO.Kebab;
using KebAppen.Business.DTO.Order;
using KebAppen.DataAccess.Data;
using KebAppen.DataAccess.Repositories.Kebabs;
using KebAppen.Models.Kebabs;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace KebAppen.Server.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class KebabController : ControllerBase
    {
        private readonly IMapper mapper;
        private readonly IKebabRepository kebabRepo;
        private readonly AppDbContext context;

        public KebabController(IMapper mapper, IKebabRepository kebabRepo, AppDbContext context)
        {
            this.mapper = mapper;
            this.kebabRepo = kebabRepo;
            this.context = context;
        }

        [HttpGet]
        public async Task<ActionResult<List<KebabDto>>> GetAllKebabs()
        {
            var AvailableKebabs = await kebabRepo.GetAllKebabs();

            return mapper.Map<List<KebabDto>>(AvailableKebabs);
        }
        [HttpPost]
        public async Task<ActionResult> AddNewkebab([FromBody]KebabCreationDto kebabCreationDto)
        {
            var KebabCreation = mapper.Map<Kebab>(kebabCreationDto);
            context.Add(KebabCreation);
            await context.SaveChangesAsync();
            //kebabRepo.CreateKebab(KebabCreation);

            return Ok();
        }
    }
}
