using KebAppen.Business.DTO.Order;
using KebAppen.DataAccess.Data;
using KebAppen.Models.Orders;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using AutoMapper;
using KebAppen.Server.MappingProfiles;


namespace KebAppen.Server.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class OrderController : ControllerBase
    {
        private readonly IMapper mapper;
        private readonly AppDbContext context;

        public OrderController(IMapper mapper, AppDbContext context)
        {
            this.mapper = mapper;
            this.context = context;
        }

        [HttpPost]
        public async Task<ActionResult> PostOrder([FromBody] OrderDto orderCreation)
        {
            var order = mapper.Map<Order>(orderCreation);

            context.Orders.Add(order);
          await context.SaveChangesAsync();

            return NoContent();
        }

        [HttpGet]
        public async Task<ActionResult<List<OrderDto>>> GetAllOrders()
        {
            var orders = await context.Orders.Include(x => x.Kebab).Include(x => x.Drink).ToListAsync();

            return mapper.Map<List<OrderDto>>(orders);
        }


    }
}
